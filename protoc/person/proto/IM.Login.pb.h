// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Login.proto

#ifndef PROTOBUF_IM_2eLogin_2eproto__INCLUDED
#define PROTOBUF_IM_2eLogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "IM.BaseDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace IM {
namespace Login {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_IM_2eLogin_2eproto();
void protobuf_AssignDesc_IM_2eLogin_2eproto();
void protobuf_ShutdownFile_IM_2eLogin_2eproto();

class Book;
class Person;
class Phone;
class TInt32;
class TString;

// ===================================================================

class Phone : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.Phone) */ {
 public:
  Phone();
  virtual ~Phone();

  Phone(const Phone& from);

  inline Phone& operator=(const Phone& from) {
    CopyFrom(from);
    return *this;
  }

  static const Phone& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Phone* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Phone* other);

  // implements Message ----------------------------------------------

  inline Phone* New() const { return New(NULL); }

  Phone* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Phone& from);
  void MergeFrom(const Phone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Phone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string number = 1;
  void clear_number();
  static const int kNumberFieldNumber = 1;
  const ::std::string& number() const;
  void set_number(const ::std::string& value);
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  ::std::string* mutable_number();
  ::std::string* release_number();
  void set_allocated_number(::std::string* number);

  // optional .IM.BaseDefine.PhoneType phone_type = 2;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 2;
  ::IM::BaseDefine::PhoneType phone_type() const;
  void set_phone_type(::IM::BaseDefine::PhoneType value);

  // @@protoc_insertion_point(class_scope:IM.Login.Phone)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr number_;
  int phone_type_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eLogin_2eproto();
  friend void protobuf_ShutdownFile_IM_2eLogin_2eproto();

  void InitAsDefaultInstance();
  static Phone* default_instance_;
};
// -------------------------------------------------------------------

class Book : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.Book) */ {
 public:
  Book();
  virtual ~Book();

  Book(const Book& from);

  inline Book& operator=(const Book& from) {
    CopyFrom(from);
    return *this;
  }

  static const Book& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Book* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Book* other);

  // implements Message ----------------------------------------------

  inline Book* New() const { return New(NULL); }

  Book* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Book& from);
  void MergeFrom(const Book& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Book* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional float price = 2;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  float price() const;
  void set_price(float value);

  // @@protoc_insertion_point(class_scope:IM.Login.Book)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  float price_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eLogin_2eproto();
  friend void protobuf_ShutdownFile_IM_2eLogin_2eproto();

  void InitAsDefaultInstance();
  static Book* default_instance_;
};
// -------------------------------------------------------------------

class Person : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.Person) */ {
 public:
  Person();
  virtual ~Person();

  Person(const Person& from);

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }

  static const Person& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Person* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Person* other);

  // implements Message ----------------------------------------------

  inline Person* New() const { return New(NULL); }

  Person* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Person* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 age = 2;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // repeated string languages = 3;
  int languages_size() const;
  void clear_languages();
  static const int kLanguagesFieldNumber = 3;
  const ::std::string& languages(int index) const;
  ::std::string* mutable_languages(int index);
  void set_languages(int index, const ::std::string& value);
  void set_languages(int index, const char* value);
  void set_languages(int index, const char* value, size_t size);
  ::std::string* add_languages();
  void add_languages(const ::std::string& value);
  void add_languages(const char* value);
  void add_languages(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& languages() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_languages();

  // optional .IM.Login.Phone phone = 4;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 4;
  const ::IM::Login::Phone& phone() const;
  ::IM::Login::Phone* mutable_phone();
  ::IM::Login::Phone* release_phone();
  void set_allocated_phone(::IM::Login::Phone* phone);

  // repeated .IM.Login.Book books = 5;
  int books_size() const;
  void clear_books();
  static const int kBooksFieldNumber = 5;
  const ::IM::Login::Book& books(int index) const;
  ::IM::Login::Book* mutable_books(int index);
  ::IM::Login::Book* add_books();
  ::google::protobuf::RepeatedPtrField< ::IM::Login::Book >*
      mutable_books();
  const ::google::protobuf::RepeatedPtrField< ::IM::Login::Book >&
      books() const;

  // optional bool vip = 6;
  void clear_vip();
  static const int kVipFieldNumber = 6;
  bool vip() const;
  void set_vip(bool value);

  // optional string address = 7;
  void clear_address();
  static const int kAddressFieldNumber = 7;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:IM.Login.Person)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> languages_;
  ::IM::Login::Phone* phone_;
  ::google::protobuf::int32 age_;
  bool vip_;
  ::google::protobuf::RepeatedPtrField< ::IM::Login::Book > books_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eLogin_2eproto();
  friend void protobuf_ShutdownFile_IM_2eLogin_2eproto();

  void InitAsDefaultInstance();
  static Person* default_instance_;
};
// -------------------------------------------------------------------

class TInt32 : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.TInt32) */ {
 public:
  TInt32();
  virtual ~TInt32();

  TInt32(const TInt32& from);

  inline TInt32& operator=(const TInt32& from) {
    CopyFrom(from);
    return *this;
  }

  static const TInt32& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TInt32* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TInt32* other);

  // implements Message ----------------------------------------------

  inline TInt32* New() const { return New(NULL); }

  TInt32* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TInt32& from);
  void MergeFrom(const TInt32& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 int1 = 1;
  void clear_int1();
  static const int kInt1FieldNumber = 1;
  ::google::protobuf::int32 int1() const;
  void set_int1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.TInt32)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int32 int1_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eLogin_2eproto();
  friend void protobuf_ShutdownFile_IM_2eLogin_2eproto();

  void InitAsDefaultInstance();
  static TInt32* default_instance_;
};
// -------------------------------------------------------------------

class TString : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.TString) */ {
 public:
  TString();
  virtual ~TString();

  TString(const TString& from);

  inline TString& operator=(const TString& from) {
    CopyFrom(from);
    return *this;
  }

  static const TString& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TString* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TString* other);

  // implements Message ----------------------------------------------

  inline TString* New() const { return New(NULL); }

  TString* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TString& from);
  void MergeFrom(const TString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str1 = 1;
  void clear_str1();
  static const int kStr1FieldNumber = 1;
  const ::std::string& str1() const;
  void set_str1(const ::std::string& value);
  void set_str1(const char* value);
  void set_str1(const char* value, size_t size);
  ::std::string* mutable_str1();
  ::std::string* release_str1();
  void set_allocated_str1(::std::string* str1);

  // @@protoc_insertion_point(class_scope:IM.Login.TString)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr str1_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eLogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eLogin_2eproto();
  friend void protobuf_ShutdownFile_IM_2eLogin_2eproto();

  void InitAsDefaultInstance();
  static TString* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Phone

// optional string number = 1;
inline void Phone::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Phone::number() const {
  // @@protoc_insertion_point(field_get:IM.Login.Phone.number)
  return number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Phone::set_number(const ::std::string& value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.Phone.number)
}
inline void Phone::set_number(const char* value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.Phone.number)
}
inline void Phone::set_number(const char* value, size_t size) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.Phone.number)
}
inline ::std::string* Phone::mutable_number() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.Phone.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Phone::release_number() {
  // @@protoc_insertion_point(field_release:IM.Login.Phone.number)
  
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Phone::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    
  } else {
    
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.Phone.number)
}

// optional .IM.BaseDefine.PhoneType phone_type = 2;
inline void Phone::clear_phone_type() {
  phone_type_ = 0;
}
inline ::IM::BaseDefine::PhoneType Phone::phone_type() const {
  // @@protoc_insertion_point(field_get:IM.Login.Phone.phone_type)
  return static_cast< ::IM::BaseDefine::PhoneType >(phone_type_);
}
inline void Phone::set_phone_type(::IM::BaseDefine::PhoneType value) {
  
  phone_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.Phone.phone_type)
}

// -------------------------------------------------------------------

// Book

// optional string name = 1;
inline void Book::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Book::name() const {
  // @@protoc_insertion_point(field_get:IM.Login.Book.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Book::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.Book.name)
}
inline void Book::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.Book.name)
}
inline void Book::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.Book.name)
}
inline ::std::string* Book::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.Book.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Book::release_name() {
  // @@protoc_insertion_point(field_release:IM.Login.Book.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Book::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.Book.name)
}

// optional float price = 2;
inline void Book::clear_price() {
  price_ = 0;
}
inline float Book::price() const {
  // @@protoc_insertion_point(field_get:IM.Login.Book.price)
  return price_;
}
inline void Book::set_price(float value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.Book.price)
}

// -------------------------------------------------------------------

// Person

// optional string name = 1;
inline void Person::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Person::name() const {
  // @@protoc_insertion_point(field_get:IM.Login.Person.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.Person.name)
}
inline void Person::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.Person.name)
}
inline void Person::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.Person.name)
}
inline ::std::string* Person::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.Person.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person::release_name() {
  // @@protoc_insertion_point(field_release:IM.Login.Person.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.Person.name)
}

// optional int32 age = 2;
inline void Person::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 Person::age() const {
  // @@protoc_insertion_point(field_get:IM.Login.Person.age)
  return age_;
}
inline void Person::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.Person.age)
}

// repeated string languages = 3;
inline int Person::languages_size() const {
  return languages_.size();
}
inline void Person::clear_languages() {
  languages_.Clear();
}
inline const ::std::string& Person::languages(int index) const {
  // @@protoc_insertion_point(field_get:IM.Login.Person.languages)
  return languages_.Get(index);
}
inline ::std::string* Person::mutable_languages(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Login.Person.languages)
  return languages_.Mutable(index);
}
inline void Person::set_languages(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:IM.Login.Person.languages)
  languages_.Mutable(index)->assign(value);
}
inline void Person::set_languages(int index, const char* value) {
  languages_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Login.Person.languages)
}
inline void Person::set_languages(int index, const char* value, size_t size) {
  languages_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Login.Person.languages)
}
inline ::std::string* Person::add_languages() {
  // @@protoc_insertion_point(field_add_mutable:IM.Login.Person.languages)
  return languages_.Add();
}
inline void Person::add_languages(const ::std::string& value) {
  languages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:IM.Login.Person.languages)
}
inline void Person::add_languages(const char* value) {
  languages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IM.Login.Person.languages)
}
inline void Person::add_languages(const char* value, size_t size) {
  languages_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IM.Login.Person.languages)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Person::languages() const {
  // @@protoc_insertion_point(field_list:IM.Login.Person.languages)
  return languages_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Person::mutable_languages() {
  // @@protoc_insertion_point(field_mutable_list:IM.Login.Person.languages)
  return &languages_;
}

// optional .IM.Login.Phone phone = 4;
inline bool Person::has_phone() const {
  return !_is_default_instance_ && phone_ != NULL;
}
inline void Person::clear_phone() {
  if (GetArenaNoVirtual() == NULL && phone_ != NULL) delete phone_;
  phone_ = NULL;
}
inline const ::IM::Login::Phone& Person::phone() const {
  // @@protoc_insertion_point(field_get:IM.Login.Person.phone)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return phone_ != NULL ? *phone_ : *default_instance().phone_;
#else
  return phone_ != NULL ? *phone_ : *default_instance_->phone_;
#endif
}
inline ::IM::Login::Phone* Person::mutable_phone() {
  
  if (phone_ == NULL) {
    phone_ = new ::IM::Login::Phone;
  }
  // @@protoc_insertion_point(field_mutable:IM.Login.Person.phone)
  return phone_;
}
inline ::IM::Login::Phone* Person::release_phone() {
  // @@protoc_insertion_point(field_release:IM.Login.Person.phone)
  
  ::IM::Login::Phone* temp = phone_;
  phone_ = NULL;
  return temp;
}
inline void Person::set_allocated_phone(::IM::Login::Phone* phone) {
  delete phone_;
  phone_ = phone;
  if (phone) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Login.Person.phone)
}

// repeated .IM.Login.Book books = 5;
inline int Person::books_size() const {
  return books_.size();
}
inline void Person::clear_books() {
  books_.Clear();
}
inline const ::IM::Login::Book& Person::books(int index) const {
  // @@protoc_insertion_point(field_get:IM.Login.Person.books)
  return books_.Get(index);
}
inline ::IM::Login::Book* Person::mutable_books(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Login.Person.books)
  return books_.Mutable(index);
}
inline ::IM::Login::Book* Person::add_books() {
  // @@protoc_insertion_point(field_add:IM.Login.Person.books)
  return books_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::IM::Login::Book >*
Person::mutable_books() {
  // @@protoc_insertion_point(field_mutable_list:IM.Login.Person.books)
  return &books_;
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::Login::Book >&
Person::books() const {
  // @@protoc_insertion_point(field_list:IM.Login.Person.books)
  return books_;
}

// optional bool vip = 6;
inline void Person::clear_vip() {
  vip_ = false;
}
inline bool Person::vip() const {
  // @@protoc_insertion_point(field_get:IM.Login.Person.vip)
  return vip_;
}
inline void Person::set_vip(bool value) {
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.Person.vip)
}

// optional string address = 7;
inline void Person::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Person::address() const {
  // @@protoc_insertion_point(field_get:IM.Login.Person.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.Person.address)
}
inline void Person::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.Person.address)
}
inline void Person::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.Person.address)
}
inline ::std::string* Person::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.Person.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person::release_address() {
  // @@protoc_insertion_point(field_release:IM.Login.Person.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.Person.address)
}

// -------------------------------------------------------------------

// TInt32

// optional int32 int1 = 1;
inline void TInt32::clear_int1() {
  int1_ = 0;
}
inline ::google::protobuf::int32 TInt32::int1() const {
  // @@protoc_insertion_point(field_get:IM.Login.TInt32.int1)
  return int1_;
}
inline void TInt32::set_int1(::google::protobuf::int32 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.TInt32.int1)
}

// -------------------------------------------------------------------

// TString

// optional string str1 = 1;
inline void TString::clear_str1() {
  str1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TString::str1() const {
  // @@protoc_insertion_point(field_get:IM.Login.TString.str1)
  return str1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TString::set_str1(const ::std::string& value) {
  
  str1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.TString.str1)
}
inline void TString::set_str1(const char* value) {
  
  str1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.TString.str1)
}
inline void TString::set_str1(const char* value, size_t size) {
  
  str1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.TString.str1)
}
inline ::std::string* TString::mutable_str1() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.TString.str1)
  return str1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TString::release_str1() {
  // @@protoc_insertion_point(field_release:IM.Login.TString.str1)
  
  return str1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TString::set_allocated_str1(::std::string* str1) {
  if (str1 != NULL) {
    
  } else {
    
  }
  str1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str1);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.TString.str1)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Login
}  // namespace IM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2eLogin_2eproto__INCLUDED
